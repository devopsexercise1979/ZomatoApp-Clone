name: Build,Analyze,scan
on:
  workflow_dispatch:

jobs:
  build-analyze-scan:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
      - name: NPM Install
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
        
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml
        
      - name: Docker Build and push
        run: |
          docker build -t zomato .
          docker tag zomato alvin1979/zomato:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push alvin1979/zomato:latest
        env:
          DOCKER_CLI_ACI: 1
      - name: Image scan
        run: trivy image alvin1979/zomato:latest > trivyimage.txt
  deploy:
   needs: build-analyze-scan
   runs-on: [self-hosted]
   steps:
      - name: docker pull image
        run: docker pull sreedhar8897/zomato:latest
      - name: Image scan
        run: trivy image sreedhar8897/zomato:latest > trivyimagedeploy.txt
      - name: Deploy to container
        run: docker run -d --name zomato -p 3000:3000 sreedhar8897/zomato:latest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name Zomato-EKS-Cluster
      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions-eks'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
